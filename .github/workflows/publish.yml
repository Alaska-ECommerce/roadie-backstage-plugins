name: Semantic Release

on:
  workflow_dispatch:

jobs:
  semantic_release:
    name: 'Semantic Release'
    runs-on: ubuntu-latest

    steps:
      # - uses: rtCamp/action-cleanup@master
      #   name: Clean Workspace
      - name: Checkout Source Code
        uses: actions/checkout@v2

      # - name: Setup Github Packages Registry
      #   uses: actions/setup-node@v2.5.1
      #   with:
      #     registry-url: 'https://itsals.pkgs.visualstudio.com/_packaging/as.com-npm/npm/registry/'
      #     always-auth: true
      #     token: ${{ secrets.ADOB64 }}
      # - run: 
      #   |
      #     echo "//registry.npmjs.org/:_authToken=${{secrets.GHB64}}" >> .npmrc
      #     echo "_auth = ${{ secrets.GHB64 }}" >> .npmrc
      #     echo "always-auth = true" >> .npmrc

      - name: Build Package
        run: |
          curl --compressed -o- -L https://yarnpkg.com/install.sh | bash
          yarn set version berry
          yarn install --frozen-lockfile
          yarn tsc
          yarn build
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: '16.x'
      #     registry-url: 'https://itsals.pkgs.visualstudio.com/_packaging/as.com-npm/npm/registry/'
      #     # Defaults to the user or organization that owns the workflow file
      #     scope: '@alaskaair'
      # - run: npm publish
        # env:
        #   NODE_AUTH_TOKEN: ${{ secrets.ADOB64 }}
      # - name: Semantic Release (Dry Run)
      #   if: ${{ github.ref != 'refs/heads/main'  }}
      #   run: |
      #     npm run release -- --dry-run --branches ${GITHUB_REF#refs/heads/}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.GH_TOKEN }}
      #     NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
      # - name: Secret Replace
      #   run: |

      #     echo "registry=https://itsals.pkgs.visualstudio.com/_packaging/as.com-npm/npm/registry/" >> .npmrc
      #     echo "always-auth=true" >> .npmrc
      #     echo "@alaskaair:registry=https://itsals.pkgs.visualstudio.com/_packaging/as.com-npm/npm/registry/" >> .npmrc
      #     echo "@alaskaair:always-auth=true" >> .npmrc
      #     echo "//itsals.pkgs.visualstudio.com/_packaging/as.com-npm/npm/registry/:username=itsals" >> .npmrc
      #     echo "//itsals.pkgs.visualstudio.com/_packaging/as.com-npm/npm/registry/:_password=ALASKA_NPM_TOKEN" >> .npmrc
      #     echo "//itsals.pkgs.visualstudio.com/_packaging/as.com-npm/npm/registry/:email=ecomm_github_automtn@alaskaair.com" >> .npmrc
      #     echo "//itsals.pkgs.visualstudio.com/_packaging/as.com-npm/npm/registry/:always-auth=true" >> .npmrc

      #     sed -i -e s/ALASKA_NPM_TOKEN/${{ secrets.ADOB64 }}/g .npmrc
          
      - name: Run publish
        run: |

          # cat ./packages/app/.npmrc
          # cat ./packages/backend/.npmrc
          # echo "//registry.npmjs.org/:_authToken=${{ secrets.ADO_PAT }}" >> .npmrc
          # echo "_auth = ${{ secrets.ADO_PAT }}" >> .npmrc
          # echo "always-auth = true" >> .npmrc

          git config user.name "ecomm-github-automtn"
          git config user.email "ecomm_github_automtn@alaskaair.com"
                  
          # git update-index --assume-unchanged ./.npmrc
          # git update-index --assume-unchanged .yarnrc
          # git update-index --assume-unchanged .yarn/
          
          lerna publish from-package --yes --no-verify-access